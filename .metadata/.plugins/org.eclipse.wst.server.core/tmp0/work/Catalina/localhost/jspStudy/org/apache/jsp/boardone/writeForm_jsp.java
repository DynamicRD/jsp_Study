/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-15 12:43:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.boardone;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class writeForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/boardone/view/color.jsp", Long.valueOf(1734048948652L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\r');
      out.write('\n');

String bodyback_c="#e0ffff";
String back_c="#8fbc8f";
String title_c="#5f9ea0";
String value_c="#b0e0e6";
String bar="#778899";

      out.write('\n');

//새로운 글로 입력(num=0, ref=0, step=0, depth=0)
//부모글에 대한 답변으로 입력(num=부모값, ref=부모값, step=부모값, depth=부모값)
int num = 0, ref = 1, step = 0, depth = 0;
try {
	if (request.getParameter("num") != null) {
		num = Integer.parseInt(request.getParameter("num"));
		ref = Integer.parseInt(request.getParameter("ref"));
		step = Integer.parseInt(request.getParameter("step"));
		depth = Integer.parseInt(request.getParameter("depth"));
	}

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>My Board</title>\n");
      out.write("<link href=\"style.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("<script src=\"script.js?timestamp=");
      out.print(System.currentTimeMillis());
      out.write("\">\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("<!--// 나중에 새글 답별글 구분하는 코드 추가 <1> -->\n");
      out.write("<body bgcolor=\"");
      out.print(bodyback_c);
      out.write("\">\n");
      out.write("	<main>\n");
      out.write("		<b>글쓰기</b>\n");
      out.write("	</main>\n");
      out.write("	<br></br>\n");
      out.write("	<form method=\"post\" name=\"writeForm\" action=\"writeProc.jsp\"\n");
      out.write("		onsubmit=\"return writeSave()\">\n");
      out.write("		<input type=\"hidden\" name=\"num\" value=\"");
      out.print(num);
      out.write("\"> <input\n");
      out.write("			type=\"hidden\" name=\"ref\" value=\"");
      out.print(ref);
      out.write("\"> <input\n");
      out.write("			type=\"hidden\" name=\"step\" value=\"");
      out.print(step);
      out.write("\"> <input\n");
      out.write("			type=\"hidden\" name=\"depth\" value=\"");
      out.print(depth);
      out.write("\">\n");
      out.write("		<table width=\"400\" border=\"1\" cellpadding=\"0\" cellspacing=\"0\"\n");
      out.write("			align=\"center\" bgcolor=\"");
      out.print(bodyback_c);
      out.write("\">\n");
      out.write("			<tr>\n");
      out.write("				<td align=\"right\" colspan=\"2\" bgcolor=\"");
      out.print(value_c);
      out.write("\"><a\n");
      out.write("					href=\"list.jsp\">글목록</a></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<td width=\"70\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">이름</td>\n");
      out.write("				<td width=\"330\"><input type=\"text\" size=\"12\" maxlength=\"12\"\n");
      out.write("					name=\"writer\" /></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<td width=\"70\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">이메일</td>\n");
      out.write("				<td width=\"330\"><input type=\"text\" size=\"30\" maxlength=\"30\"\n");
      out.write("					name=\"email\" /></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<td width=\"70\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">제목</td>\n");
      out.write("				<td width=\"330\">\n");

					if (request.getParameter("num") == null) {

      out.write(" 				<input type=\"text\" size=\"50\" maxlength=\"50\" name=\"subject\" /> \n");

 						} else {

      out.write(" \n");
      out.write(" 					<input type=\"text\" size=\"50\" maxlength=\"50\" name=\"subject\" value=\"[답변]\" />\n");

					}

      out.write("\n");
      out.write("				</td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<td width=\"70\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">내용</td>\n");
      out.write("				<td width=\"330\"><textarea name=\"content\" rows=\"13\" cols=\"50\"></textarea>\n");
      out.write("				</td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<td width=\"70\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\">비밀번호</td>\n");
      out.write("				<td width=\"330\"><input type=\"password\" size=\"10\" maxlength=\"10\"\n");
      out.write("					name=\"pass\" /></td>\n");
      out.write("			</tr>\n");
      out.write("			<tr>\n");
      out.write("				<td colspan=\"2\" bgcolor=\"");
      out.print(value_c);
      out.write("\" align=\"center\"><input\n");
      out.write("					type=\"submit\" value=\"글쓰기\" /> <input type=\"reset\" value=\"다시작성\" />\n");
      out.write("					<input type=\"button\" value=\"목록\"\n");
      out.write("					onClick=\"window.location='list.jsp'\"></td>\n");
      out.write("			</tr>\n");
      out.write("		</table>\n");
      out.write("	</form>\n");
      out.write("	");

	} catch (Exception e) {
	}
	
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
